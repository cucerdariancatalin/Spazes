plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'//dagger hilt
    id 'com.google.gms.google-services'//google services
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.mcdev.spazes"
        minSdk 23
        targetSdk 31
        versionCode 4
        versionName "1.3"
        archivesBaseName = "Spazes-v${versionName}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            //When set to true, enables code shrinking, obfuscation and optimization for only the release build type
            minifyEnabled false

            //Enables resource shrinking, which is performed by the Android Gradle plugin
            shrinkResources false

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            //When set to true, enables code shrinking, obfuscation and optimization for only the release build type
            minifyEnabled false

            //Enables resource shrinking, which is performed by the Android Gradle plugin
            shrinkResources false

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }


//        //manage apk name
//        applicationVariants.all{
//            variant ->
//                variant.outputs.each{
//                    output ->
//                        def name = "Spazes v${variant.versionName}.apk"
//                        output.outputFileName = name
//                }
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    /*Kojofosu's TwitterApiV2*/
    implementation 'com.github.kojofosu:TwitterApiKit:1.1.2'

    /*Coroutine*/
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    /*Fresco*/
    implementation 'com.facebook.fresco:fresco:2.5.0'

    /*Lottie*/
    implementation "com.airbnb.android:lottie:4.2.1"

    /*Multi search view*/
    implementation 'com.github.kojofosu:MultiSearchView:1.4'

    /*Daimajia's Android view animations*/
    implementation 'com.daimajia.androidanimations:library:2.4@aar'

    /*Android Support Library*/
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    /*Hilt*/
    implementation 'com.google.dagger:hilt-android:2.40.5'
    kapt 'com.google.dagger:hilt-compiler:2.40.5'

    /*Retrofit*/
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.40.5'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.40.5'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.40.5'
    kaptTest 'com.google.dagger:hilt-compiler:2.40.5'

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.4.0"

    // Architectural Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    //Firebase
    //Add the firebase BOM
    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    // // Add the dependencies for any other desired Firebase products
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-common-ktx'

    //Datastore Preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0"
}